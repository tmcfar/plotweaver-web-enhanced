# BFF Dockerfile
FROM python:3.12-slim AS base

# Install git
RUN apt-get update && apt-get install -y \
    git \
    openssh-client \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN groupadd --system --gid 1001 plotweaver && \
    useradd --system --uid 1001 --gid plotweaver --shell /bin/bash plotweaver

# Set working directory
WORKDIR /app

# Copy requirements
COPY bff/requirements.txt .
# Skip Playwright browser downloads to prevent timeout
ENV PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1
RUN pip install --no-cache-dir -r requirements.txt

# Install additional dependencies for git operations
RUN pip install --no-cache-dir aiofiles pyyaml

# Development stage
FROM base AS development
WORKDIR /app

# Set environment variables for development
ENV PYTHONPATH=/app:/app/bff
ENV GIT_REPO_PATH=/opt/plotweaver/bff-repo
ENV ENVIRONMENT=development

# Create directory for git repository and set ownership
RUN mkdir -p /opt/plotweaver/bff-repo && \
    chown -R plotweaver:plotweaver /opt/plotweaver /app

# Switch to non-root user
USER plotweaver

# Expose FastAPI port
EXPOSE 8000

# Run FastAPI with uvicorn in development mode with reload
CMD ["uvicorn", "bff.server.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

# Production stage
FROM base AS production
WORKDIR /app

# Copy application code with proper ownership
COPY --chown=plotweaver:plotweaver . .

# Create directory for git repository and set ownership
RUN mkdir -p /opt/plotweaver/bff-repo && \
    chown -R plotweaver:plotweaver /opt/plotweaver /app

# Set environment variables
ENV PYTHONPATH=/app:/app/bff
ENV GIT_REPO_PATH=/opt/plotweaver/bff-repo

# Switch to non-root user
USER plotweaver

# Expose FastAPI port
EXPOSE 8000

# Run FastAPI with uvicorn
CMD ["uvicorn", "bff.server.main:app", "--host", "0.0.0.0", "--port", "8000"]
